package table

import (
	"reflect"
	"testing"
)

func TestSplitParagraph(t *testing.T) {
	type args struct {
		str   string
		width int
	}
	tests := []struct {
		name string
		args args
		want []string
	}{

		{args: args{str: "\nEn un lugar de la Mancha de cuyo nombre no quiero acordarme ...\n\n\nY colorín colorado, este cuento se ha acabado\n\n",
			width: 1},
			want: []string{"",
				"E",
				"n",
				"u",
				"n",
				"l",
				"u",
				"g",
				"a",
				"r",
				"d",
				"e",
				"l",
				"a",
				"M",
				"a",
				"n",
				"c",
				"h",
				"a",
				"d",
				"e",
				"c",
				"u",
				"y",
				"o",
				"n",
				"o",
				"m",
				"b",
				"r",
				"e",
				"n",
				"o",
				"q",
				"u",
				"i",
				"e",
				"r",
				"o",
				"a",
				"c",
				"o",
				"r",
				"d",
				"a",
				"r",
				"m",
				"e",
				".",
				".",
				".",
				"",
				"",
				"Y",
				"c",
				"o",
				"l",
				"o",
				"r",
				"í",
				"n",
				"c",
				"o",
				"l",
				"o",
				"r",
				"a",
				"d",
				"o",
				",",
				"e",
				"s",
				"t",
				"e",
				"c",
				"u",
				"e",
				"n",
				"t",
				"o",
				"s",
				"e",
				"h",
				"a",
				"a",
				"c",
				"a",
				"b",
				"a",
				"d",
				"o",
				""}},

		{args: args{str: "\nEn un lugar de la Mancha de cuyo nombre no quiero acordarme ...\n\n\nY colorín colorado, este cuento se ha acabado\n\n",
			width: 5},
			want: []string{"",
				"En un",
				"lugar",
				"de la",
				"Manch",
				"a de",
				"cuyo",
				"nombr",
				"e no",
				"quier",
				"o",
				"acord",
				"arme",
				"...",
				"",
				"",
				"Y",
				"color",
				"ín",
				"color",
				"ado,",
				"este",
				"cuent",
				"o se",
				"ha",
				"acaba",
				"do",
				""}},

		{args: args{str: "\nEn un lugar de la Mancha de cuyo nombre no quiero acordarme ...\n\n\nY colorín colorado, este cuento se ha acabado\n\n",
			width: 10},
			want: []string{"",
				"En un",
				"lugar de",
				"la Mancha",
				"de cuyo",
				"nombre no",
				"quiero",
				"acordarme",
				"...",
				"",
				"",
				"Y colorín",
				"colorado,",
				"este",
				"cuento se",
				"ha acabado",
				""}},

		{args: args{str: "\nEn un lugar de la Mancha de cuyo nombre no quiero acordarme ...\n\n\nY colorín colorado, este cuento se ha acabado\n\n",
			width: 20},
			want: []string{"",
				"En un lugar de la",
				"Mancha de cuyo",
				"nombre no quiero",
				"acordarme ...",
				"",
				"",
				"Y colorín colorado,",
				"este cuento se ha",
				"acabado",
				""}},

		{args: args{str: "\nEn un lugar de la Mancha de cuyo nombre no quiero acordarme ...\n\n\nY colorín colorado, este cuento se ha acabado\n\n",
			width: 30},
			want: []string{"",
				"En un lugar de la Mancha de",
				"cuyo nombre no quiero",
				"acordarme ...",
				"",
				"",
				"Y colorín colorado, este",
				"cuento se ha acabado",
				""}},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := splitParagraph(tt.args.str, tt.args.width); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("splitParagraph() = %v, want %v", got, tt.want)
			}
		})
	}
}
